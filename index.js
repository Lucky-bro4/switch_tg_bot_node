const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');
const sequelize = require('./db');
const UserModel = require('./models/models');

const token = '7398795259:AAHjSGlszFTKruI6a2YiEgUPvuqGP3lU2vQ'
const webAppUrl = 'https://celadon-starburst-c6387c.netlify.app/'
const adminChatId = 701729944
let message_id = 0

const bot = new TelegramBot(token, {polling: true});
const app = express();

app.use(express.json());
app.use(cors());

bot.setMyCommands( [
  {command: '/start', description: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å'}
])

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const username = msg.from.username;

  const presaleText = `Switch - –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∏ —Ç–≤–æ–π –∫–ª—é—á –∫ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –≥–∞—Ä–¥–µ—Ä–æ–±—É.\n
üåü –¢–≤–æ–π –≥–∞—Ä–¥–µ—Ä–æ–± –¥—ã—à–∏—Ç —Å–≤–æ–±–æ–¥–æ–π - –±–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–≤–∞–ª–æ–≤ –∏–∑ –æ–¥–µ–∂–¥—ã, –∫–æ—Ç–æ—Ä—É—é "–∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –Ω–∞–¥–µ–Ω—É"!
üí∞ –¢–≤–æ–π –∫–æ—à–µ–ª–µ–∫ —Å–∫–∞–∂–µ—Ç —Å–ø–∞—Å–∏–±–æ - –ø–æ–∫—É–ø–∞–π –º–µ–Ω—å—à–µ, –∞ —Å—Ç–∏–ª—å–Ω—ã—Ö –≤–µ—â–µ–π –Ω–æ—Å–∏ –±–æ–ª—å—à–µ!
üåç –ü–ª–∞–Ω–µ—Ç–∞ —Ç–µ–±–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ - –º—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∏ –≤–º–µ—Å—Ç–µ –±–æ—Ä–µ–º—Å—è —Å –ø–µ—Ä–µ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º!\n
‚ú® Switch - —ç—Ç–æ —Ç–≤–æ–π –ø—É—Ç—å –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–º—É —Å—Ç–∏–ª—é!`


  try {
    if(text === '/start') {

      try {
        await UserModel.create({chatId, login: username})
      } catch (e) {}

      await bot.sendMessage(chatId, presaleText, {
        reply_markup: {
          keyboard: [
            ['–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Switch?', '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏'],
            [{text: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É üóí', web_app: {url: webAppUrl + 'form'}}]
          ],
          resize_keyboard: true
        }
      })

      const saleText = `üëá –ó–∞–≥–ª—è–¥—ã–≤–∞–π –∫ –Ω–∞–º –Ω–∞ —Å–∞–π—Ç –∏ —Å–æ–∑–¥–∞–≤–∞–π —Å–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑!\n`

      await bot.sendMessage(chatId, saleText, {
        reply_markup: {
          inline_keyboard: [
            [{text: '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', web_app: {url: webAppUrl}}]
          ]
        }
      })

      try {
        await sequelize.authenticate()
        await sequelize.sync()
      } catch (e) {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥ —Å–ª–æ–º–∞–ª–æ—Å—å', e)
      }
    } else if (text === '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Switch?') {

      message_how_switch_works = `Switch - —Å–µ—Ä–≤–∏—Å –ø–æ —à—ç—Ä–∏–Ω–≥—É –æ–¥–µ–∂–¥—ã\n
- –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤–µ—â–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥, –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —ç—Ç–∞–ø –æ—Ç–±–æ—Ä–∞, –æ—Ü–µ–Ω–∫–∏ –∏ —Ö–∏–º—á–∏—Å—Ç–∫–∏ –æ–¥–µ–∂–¥—ã.
- –≤–µ—â–∏ –±–æ–ª–µ–µ –Ω–µ–ø—Ä–∏–≥–æ–¥–Ω—ã–µ –∫ –Ω–æ—à–µ–Ω–∏—é –∏–ª–∏ –Ω–µ –ø–æ–ª—å–∑—É—é—â–∏–µ—Å—è —Å–ø—Ä–æ—Å–æ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–¥–∞—é—Ç—Å—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–æ–Ω–¥—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è.
- <b>–í–ù–ò–ú–ê–ù–ò–ï:</b> —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∏–º –≤–∞—Å –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ –≤–µ—â–∞–º –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ–Ω–∏ —Å–º–æ–≥—É—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –ø–æ–ª—å–∑—É –∏ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
<em>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —É—Ç–µ—Ä—é / –ø–æ—Ä—á—É –≤–µ—â–µ–π —Å–µ—Ä–≤–∏—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Ä–µ—Ç –Ω–∞ —Å–µ–±—è. –ù–æ—Å–∏—Ç–µ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!</em>\n
<b>–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?</b>\n
1. –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—â–∏, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ, –∏ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (–≤–µ—â–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ä–∞–∑–¥–µ–ª "–ü–æ–Ω—Ä–∞–≤–∏–≤—à–µ–µ—Å—è")\n
2. –í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã–±–µ—Ä–∏—Ç–µ 4 —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å, –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É, —É–∫–∞–∑–∞–≤ –∞–¥—Ä–µ—Å –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏\n
3. –í —Ç–µ—á–µ–Ω–∏–µ 2-—Ö —á–∞—Å–æ–≤ –∫—É—Ä—å–µ—Ä –ø—Ä–∏–≤–µ–∑–µ—Ç –∫–æ–º–ø–ª–µ–∫—Ç –æ–¥–µ–∂–¥—ã –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å\n
4. –ß–µ—Ä–µ–∑ 24 —á–∞—Å–∞, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø—Ä–æ–¥–ª–∏–ª–∏ –∞—Ä–µ–Ω–¥—É –∏–ª–∏ –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –Ω–æ–≤—ã–π —Å–µ—Ç, –∫—É—Ä—å–µ—Ä –ø—Ä–∏–µ–¥–µ—Ç –∑–∞–±—Ä–∞—Ç—å –≤–µ—â–∏ (–∑–∞ 2 —á–∞—Å–∞ –¥–æ –∫–æ–Ω—Ü–∞ –∞—Ä–µ–Ω–¥—ã –º—ã –ø—Ä–∏—à–ª–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç)\n
5. –æ–¥–µ–∂–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –∏ —Ö–∏–º—á–∏—Å—Ç–∫—É –ø–æ—Å–ª–µ —á–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ —Å–µ—Ä–≤–∏—Å / —Ñ–æ–Ω–¥—ã / –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫—É.


<b>–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—É 8:00-24:00</b>`

      await bot.sendMessage(chatId, message_how_switch_works, {parse_mode: 'HTML'})
    } else if (text === '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏') {

      message_to_connect_with = `–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏/–∏–ª–∏ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ —Å —Å–µ—Ä–≤–∏—Å–æ–º:\n
1. –ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–ø–∏—Å–∞—Ç—å", –ø—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∏ –º—ã –µ–≥–æ –ø–æ–ª—É—á–∏–º.\n
2. –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É hello.switch@yandex.ru, –æ—Ç–≤–µ—Ç–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ.`

      await bot.sendMessage(chatId, message_to_connect_with, {
        reply_markup: {
          inline_keyboard: [
            [{text: '–ù–∞–ø–∏—Å–∞—Ç—å', callback_data: 'message_to_bot'}],
          ]
        }
      })

      bot.on('callback_query', msg => {
        const data = msg.data
        // const {message_id, text} = msg.message
        if (data === 'message_to_bot') {
          bot.sendMessage(chatId, '–ó–∞–ø–∏—Å—ã–≤–∞—é ‚úçÔ∏è')
          bot.on('message', async mg => {
            message_id = mg.message_id
            if (mg.text === '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Switch?' || '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏' || '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É üóí') {
              return
            } else {
              await bot.forwardMessage(adminChatId, chatId, message_id)
              await bot.sendMessage(chatId, `–ü–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ —á–∞—Ç–µ ${message_id}`, {
                reply_to_message_id: message_id
              })
            }
          })
        }
      })
      
    } else {
        await bot.sendMessage(chatId, '–•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞, –Ω–æ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª ü¶øü¶æ')
    }

  } catch (e) {
    console.log('–ë–æ—Ç –Ω–µ –¥—ã—à–∏—Ç!', (e))
    return bot.sendMessage(chatId, '–ë–æ—Ç –Ω–µ –¥—ã—à–∏—Ç! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –º—ã —Å–∫–æ—Ä–æ –≤—Å–µ –∏—Å–ø—Ä–∞–≤–∏–º üè•')
  }

  if(msg?.web_app_data?.data) {
    try {
      const data = JSON.parse(msg?.web_app_data?.data)
      console.log(data)
      await bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!')
      await bot.sendMessage(chatId, '–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞: ' + data?.country);
      await bot.sendMessage(chatId, '–í–∞—à–∞ —É–ª–∏—Ü–∞ ' + data?.street);

      setTimeout( async () => {
        await bot.sendMessage(chatId, '–í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ');
      }, 3000)
    } catch (e) {
        console.log(e)
    }
  }
});

app.post( '/web-data', async (req, res) => {
  
  const {queryId, products, totalPrice} = req.body;

  try {
    await bot.answerWebAppQuery(queryId, {
      type: 'article',
      id: queryId,
      title: '–£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞',
      input_message_content: {message_text: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–µ—Ä–≤—ã–º —Å–≤–∏—Ç—á–µ–º! –ó–∞ 3 —á–∞—Å–∞ –¥–æ –∫–æ–Ω—Ü–∞ –∞—Ä–µ–Ω–¥—ã –º—ã –ø—Ä–∏—à–ª–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —á–∞—Ç. –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –≤–µ—â–∏ –µ—â–µ –Ω–∞ —Å—É—Ç–∫–∏ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ - –≤—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏!'}
    })
    return res.status(200).json({});
  } catch (e) {
      await bot.answerWebAppQuery(queryId, {
        type: 'article',
        id: queryId,
        title: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä',
        input_message_content: {message_text: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä'}
      })
    return res.status(500).json({});
  }
})


const PORT = 8000;

app.listen(PORT, () => console.log('server started on PORT ' + PORT))